"""create_tables

Revision ID: da177db88dcd
Revises: 
Create Date: 2025-09-08 13:02:55.784797

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = 'da177db88dcd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gyms',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gyms_name'), 'gyms', ['name'], unique=True)
    op.create_table('plans',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('price', sa.Numeric(), nullable=False),
    sa.Column('duration_days', sa.Integer(), nullable=False),
    sa.Column('gym_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('REGULAR', 'TAQUILLERO', name='planrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('days', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gym_id'], ['gyms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plans_name'), 'plans', ['name'], unique=False)
    op.create_table('products',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('price', sa.Numeric(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('gym_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['gym_id'], ['gyms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_products_name'), 'products', ['name'], unique=False)
    op.create_table('users',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('document_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'TRAINER', 'USER', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gym_id', sa.Integer(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('schedule_start', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('schedule_end', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fingerprint1', sa.LargeBinary(), nullable=True),
    sa.Column('fingerprint2', sa.LargeBinary(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['gym_id'], ['gyms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_document_id'), 'users', ['document_id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_table('attendance',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('gym_id', sa.Integer(), nullable=False),
    sa.Column('check_in_time', sa.DateTime(), nullable=False),
    sa.Column('recorded_by_id', sa.Integer(), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['gym_id'], ['gyms.id'], ),
    sa.ForeignKeyConstraint(['recorded_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('measurements',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('height', sa.Numeric(), nullable=True),
    sa.Column('weight', sa.Numeric(), nullable=True),
    sa.Column('chest', sa.Numeric(), nullable=True),
    sa.Column('shoulders', sa.Numeric(), nullable=True),
    sa.Column('biceps_left', sa.Numeric(), nullable=True),
    sa.Column('biceps_right', sa.Numeric(), nullable=True),
    sa.Column('forearms_left', sa.Numeric(), nullable=True),
    sa.Column('forearms_right', sa.Numeric(), nullable=True),
    sa.Column('abdomen', sa.Numeric(), nullable=True),
    sa.Column('hips', sa.Numeric(), nullable=True),
    sa.Column('thighs_left', sa.Numeric(), nullable=True),
    sa.Column('thighs_right', sa.Numeric(), nullable=True),
    sa.Column('calves_left', sa.Numeric(), nullable=True),
    sa.Column('calves_right', sa.Numeric(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('measurement_date', sa.DateTime(), nullable=False),
    sa.Column('recorded_by_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['recorded_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sales',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(), nullable=False),
    sa.Column('total_amount', sa.Numeric(), nullable=False),
    sa.Column('sold_by_id', sa.Integer(), nullable=False),
    sa.Column('gym_id', sa.Integer(), nullable=False),
    sa.Column('sale_date', sa.DateTime(), nullable=False),
    sa.Column('payment_type', sa.Enum('CASH', 'TRANSFER', name='paymenttype'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['gym_id'], ['gyms.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['sold_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_plans',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('purchased_price', sa.Numeric(), nullable=False),
    sa.Column('purchased_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('payment_type', sa.Enum('CASH', 'TRANSFER', name='paymenttype'), nullable=False),
    sa.Column('duration_days', sa.Integer(), nullable=True),
    sa.Column('days', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_plans')
    op.drop_table('sales')
    op.drop_table('measurements')
    op.drop_table('attendance')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_document_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_products_name'), table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_plans_name'), table_name='plans')
    op.drop_table('plans')
    op.drop_index(op.f('ix_gyms_name'), table_name='gyms')
    op.drop_table('gyms')
    # ### end Alembic commands ### 